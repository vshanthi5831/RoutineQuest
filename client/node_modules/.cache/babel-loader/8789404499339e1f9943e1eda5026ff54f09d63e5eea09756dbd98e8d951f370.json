{"ast":null,"code":"// src/pages/CreateHabit.js\nimport React,{useState}from'react';import API from'../api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateHabit=_ref=>{let{refreshHabits}=_ref;const[name,setName]=useState('');const[description,setDescription]=useState('');const[frequency,setFrequency]=useState('');const[error,setError]=useState('');const handleSubmit=async e=>{e.preventDefault();if(!name||!description||!frequency){setError('Please fill in all fields');return;}try{await API.post('/habits/createHabits',{name,description,frequency});setName('');setDescription('');setFrequency('');refreshHabits();// Refresh the habit list after creation\n}catch(error){setError('Failed to create habit');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create New Habit\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Habit Name\",value:name,onChange:e=>setName(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Description\",value:description,onChange:e=>setDescription(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Frequency\",value:frequency,onChange:e=>setFrequency(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Habit\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error})]});};export default CreateHabit;","map":{"version":3,"names":["React","useState","API","jsx","_jsx","jsxs","_jsxs","CreateHabit","_ref","refreshHabits","name","setName","description","setDescription","frequency","setFrequency","error","setError","handleSubmit","e","preventDefault","post","children","onSubmit","type","placeholder","value","onChange","target","style","color"],"sources":["D:/MERN/RoutineQuest/client/src/components/CreateHabit.js"],"sourcesContent":["// src/pages/CreateHabit.js\r\nimport React, { useState } from 'react';\r\nimport API from '../api';\r\n\r\nconst CreateHabit = ({ refreshHabits }) => {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [frequency, setFrequency] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !description || !frequency) {\r\n      setError('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await API.post('/habits/createHabits', { name, description, frequency });\r\n      setName('');\r\n      setDescription('');\r\n      setFrequency('');\r\n      refreshHabits();  // Refresh the habit list after creation\r\n    } catch (error) {\r\n      setError('Failed to create habit');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Create New Habit</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Habit Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Frequency\"\r\n          value={frequency}\r\n          onChange={(e) => setFrequency(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Create Habit</button>\r\n      </form>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateHabit;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,GAAG,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,aAAc,CAAC,CAAAD,IAAA,CACpC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAiB,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CAACV,IAAI,EAAI,CAACE,WAAW,EAAI,CAACE,SAAS,CAAE,CACvCG,QAAQ,CAAC,2BAA2B,CAAC,CACrC,OACF,CAEA,GAAI,CACF,KAAM,CAAAf,GAAG,CAACmB,IAAI,CAAC,sBAAsB,CAAE,CAAEX,IAAI,CAAEE,WAAW,CAAEE,SAAU,CAAC,CAAC,CACxEH,OAAO,CAAC,EAAE,CAAC,CACXE,cAAc,CAAC,EAAE,CAAC,CAClBE,YAAY,CAAC,EAAE,CAAC,CAChBN,aAAa,CAAC,CAAC,CAAG;AACpB,CAAE,MAAOO,KAAK,CAAE,CACdC,QAAQ,CAAC,wBAAwB,CAAC,CACpC,CACF,CAAC,CAED,mBACEX,KAAA,QAAAgB,QAAA,eACElB,IAAA,OAAAkB,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBhB,KAAA,SAAMiB,QAAQ,CAAEL,YAAa,CAAAI,QAAA,eAC3BlB,IAAA,UACEoB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,YAAY,CACxBC,KAAK,CAAEhB,IAAK,CACZiB,QAAQ,CAAGR,CAAC,EAAKR,OAAO,CAACQ,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE,CAC1C,CAAC,cACFtB,IAAA,UACEoB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,aAAa,CACzBC,KAAK,CAAEd,WAAY,CACnBe,QAAQ,CAAGR,CAAC,EAAKN,cAAc,CAACM,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE,CACjD,CAAC,cACFtB,IAAA,UACEoB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,WAAW,CACvBC,KAAK,CAAEZ,SAAU,CACjBa,QAAQ,CAAGR,CAAC,EAAKJ,YAAY,CAACI,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE,CAC/C,CAAC,cACFtB,IAAA,WAAQoB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,cAAY,CAAQ,CAAC,EACvC,CAAC,CACNN,KAAK,eAAIZ,IAAA,MAAGyB,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAR,QAAA,CAAEN,KAAK,CAAI,CAAC,EAC9C,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}