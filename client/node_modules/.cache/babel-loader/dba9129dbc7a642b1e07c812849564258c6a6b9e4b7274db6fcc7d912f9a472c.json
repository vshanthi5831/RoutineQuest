{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\RoutineQuest\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport API from '../api'; // Assuming your API is set up to use JWT for authentication\nimport HabitList from '../components/HabitList';\nimport CreateHabit from '../components/CreateHabit';\nimport FilterHabits from '../components/FilterHabits';\nimport Logout from '../components/Logout';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [hasWelcomed, setHasWelcomed] = useState(false);\n  const [habits, setHabits] = useState([]);\n  const [filteredHabits, setFilteredHabits] = useState([]);\n  const [isFiltered, setIsFiltered] = useState(false);\n\n  // Fetch user data\n  const fetchUserData = async () => {\n    try {\n      var _response$data;\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('User not authenticated');\n        setLoading(false);\n        return;\n      }\n      const response = await API.get('/users/getUser', {\n        headers: {\n          Authorization: `Bearer ${token}` // Attach token for authentication\n        }\n      });\n      setUser(response.data);\n      setLoading(false);\n      if (!hasWelcomed && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.username) {\n        alert(`Welcome, ${response.data.username}!`);\n        setHasWelcomed(true);\n      }\n    } catch (error) {\n      setError('Failed to fetch user data');\n      setLoading(false);\n    }\n  };\n\n  // Fetch all habits\n  const fetchHabits = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('User not authenticated');\n        return;\n      }\n      const response = await API.get('/habits/getHabits', {\n        headers: {\n          Authorization: `Bearer ${token}` // Attach token for authentication\n        }\n      });\n      setHabits(response.data);\n      setFilteredHabits([]);\n      setIsFiltered(false);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n      setError('Failed to fetch habits');\n    }\n  };\n\n  // Refetch user data when the component mounts\n  useEffect(() => {\n    fetchUserData();\n    fetchHabits();\n  }, []);\n\n  // When filters are applied\n  const handleFilter = filteredResults => {\n    setFilteredHabits(filteredResults);\n    setIsFiltered(true);\n  };\n\n  // Clear filters\n  const clearFilters = () => {\n    setIsFiltered(false);\n    setFilteredHabits([]);\n  };\n\n  // Handle habit completion and points update\n  const handleHabitCompletion = async habitId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('User not authenticated');\n        return;\n      }\n      await API.put(`/habits/update/${habitId}`, {\n        completed: true\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}` // Attach token for authentication\n        }\n      });\n      fetchUserData();\n      fetchHabits();\n    } catch (error) {\n      console.error('Error updating habit:', error);\n      setError('Failed to update habit');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hello, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Points: \", user.points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-4\",\n        children: \"Your Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FilterHabits, {\n        setFilteredHabits: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), isFiltered && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearFilters,\n        className: \"bg-red-500 text-white px-4 py-2 mt-2 rounded\",\n        children: \"Clear Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HabitList, {\n        habits: isFiltered ? filteredHabits : habits,\n        refreshHabits: fetchHabits,\n        onHabitCompletion: handleHabitCompletion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CreateHabit, {\n        refreshHabits: fetchHabits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"+Z9JrkPY/S8T/VWumrgmWfUR0FQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","API","HabitList","CreateHabit","FilterHabits","Logout","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","user","setUser","loading","setLoading","error","setError","hasWelcomed","setHasWelcomed","habits","setHabits","filteredHabits","setFilteredHabits","isFiltered","setIsFiltered","fetchUserData","_response$data","token","localStorage","getItem","response","get","headers","Authorization","data","username","alert","fetchHabits","console","handleFilter","filteredResults","clearFilters","handleHabitCompletion","habitId","put","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","points","className","onClick","refreshHabits","onHabitCompletion","_c","$RefreshReg$"],"sources":["D:/MERN/RoutineQuest/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport API from '../api'; // Assuming your API is set up to use JWT for authentication\r\nimport HabitList from '../components/HabitList';\r\nimport CreateHabit from '../components/CreateHabit';\r\nimport FilterHabits from '../components/FilterHabits';\r\nimport Logout from '../components/Logout';\r\n\r\nconst Dashboard = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [hasWelcomed, setHasWelcomed] = useState(false);\r\n  const [habits, setHabits] = useState([]);\r\n  const [filteredHabits, setFilteredHabits] = useState([]);\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n\r\n  // Fetch user data\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError('User not authenticated');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await API.get('/users/getUser', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Attach token for authentication\r\n        },\r\n      });\r\n\r\n      setUser(response.data);\r\n      setLoading(false);\r\n\r\n      if (!hasWelcomed && response.data?.username) {\r\n        alert(`Welcome, ${response.data.username}!`);\r\n        setHasWelcomed(true);\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to fetch user data');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch all habits\r\n  const fetchHabits = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError('User not authenticated');\r\n        return;\r\n      }\r\n\r\n      const response = await API.get('/habits/getHabits', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Attach token for authentication\r\n        },\r\n      });\r\n\r\n      setHabits(response.data);\r\n      setFilteredHabits([]);\r\n      setIsFiltered(false);\r\n    } catch (error) {\r\n      console.error('Error fetching habits:', error);\r\n      setError('Failed to fetch habits');\r\n    }\r\n  };\r\n\r\n  // Refetch user data when the component mounts\r\n  useEffect(() => {\r\n    fetchUserData();\r\n    fetchHabits();\r\n  }, []);\r\n\r\n  // When filters are applied\r\n  const handleFilter = (filteredResults) => {\r\n    setFilteredHabits(filteredResults);\r\n    setIsFiltered(true);\r\n  };\r\n\r\n  // Clear filters\r\n  const clearFilters = () => {\r\n    setIsFiltered(false);\r\n    setFilteredHabits([]);\r\n  };\r\n\r\n  // Handle habit completion and points update\r\n  const handleHabitCompletion = async (habitId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError('User not authenticated');\r\n        return;\r\n      }\r\n\r\n      await API.put(`/habits/update/${habitId}`, { completed: true }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Attach token for authentication\r\n        },\r\n      });\r\n\r\n      fetchUserData();\r\n      fetchHabits();\r\n    } catch (error) {\r\n      console.error('Error updating habit:', error);\r\n      setError('Failed to update habit');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      ) : (\r\n        <div>\r\n          {user && (\r\n            <>\r\n              <h1>Hello, {user.username}!</h1>\r\n              <p>Points: {user.points}</p>\r\n            </>\r\n          )}\r\n\r\n          <h2 className=\"mt-4\">Your Habits</h2>\r\n\r\n          <FilterHabits setFilteredHabits={handleFilter} />\r\n          {isFiltered && (\r\n            <button\r\n              onClick={clearFilters}\r\n              className=\"bg-red-500 text-white px-4 py-2 mt-2 rounded\"\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          )}\r\n\r\n          <HabitList\r\n            habits={isFiltered ? filteredHabits : habits}\r\n            refreshHabits={fetchHabits}\r\n            onHabitCompletion={handleHabitCompletion}\r\n          />\r\n\r\n          <CreateHabit refreshHabits={fetchHabits} />\r\n\r\n          <Logout />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}