{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\RoutineQuest\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport API from '../api';\nimport HabitList from '../components/HabitList';\nimport CreateHabit from '../components/CreateHabit';\nimport FilterHabits from '../components/FilterHabits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  console.log('Dashboard mounted!');\n  console.log('setting states');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [hasWelcomed, setHasWelcomed] = useState(false);\n  const [habits, setHabits] = useState([]);\n  const [filteredHabits, setFilteredHabits] = useState([]);\n  const [isFiltered, setIsFiltered] = useState(false);\n  console.log('going to user block');\n  // Fetch user data\n  const fetchUserData = async () => {\n    try {\n      var _response$data;\n      const response = await API.get('/users/getUser');\n      setUser(response.data);\n      setLoading(false);\n      if (!hasWelcomed && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.username) {\n        alert(`Welcome, ${response.data.username}!`);\n        setHasWelcomed(true);\n      }\n    } catch (error) {\n      setError('Failed to fetch user data');\n      setLoading(false);\n    }\n  };\n  console.log('user block done');\n  console.log('going to habits block');\n  // Fetch all habits\n  const fetchHabits = async () => {\n    try {\n      const response = await API.get('/habits/getHabits');\n      setHabits(response.data);\n      setFilteredHabits([]); // Clear filtered habits on refetch\n      setIsFiltered(false); // Reset filter status on new fetch\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n  console.log('habits block done');\n  console.log('gng to effects block');\n  // Refetch user data and habits when the component mounts\n  useEffect(() => {\n    // fetchUserData();\n    fetchHabits();\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  console.log('effect block done');\n  console.log('handle blocks');\n  // When filters are applied\n  const handleFilter = filteredResults => {\n    setFilteredHabits(filteredResults);\n    setIsFiltered(true);\n  };\n\n  // Clear filters\n  const clearFilters = () => {\n    setIsFiltered(false);\n    setFilteredHabits([]);\n  };\n\n  // Handle habit completion and points update\n  const handleHabitCompletion = async habitId => {\n    try {\n      // Update the habit completion status\n      await API.put(`/habits/updateHabits/${habitId}`, {\n        completed: true\n      });\n\n      // Refetch habits after completing one to get updated list\n      fetchHabits();\n\n      // Optionally refetch user data if you want points or other data updated\n      fetchUserData();\n    } catch (error) {\n      console.error('Error updating habit:', error);\n    }\n  };\n  console.log('handle blocks done');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Points: \", user.points]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(FilterHabits, {\n        setFilteredHabits: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), isFiltered && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearFilters,\n        className: \"bg-red-500 text-white px-4 py-2 mt-2 rounded\",\n        children: \"Clear Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-4\",\n        children: \"Your Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HabitList, {\n        habits: isFiltered ? filteredHabits : habits,\n        refreshHabits: fetchHabits,\n        onHabitCompletion: handleHabitCompletion // Pass habit completion handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CreateHabit, {\n        refreshHabits: fetchHabits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"+Z9JrkPY/S8T/VWumrgmWfUR0FQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","API","HabitList","CreateHabit","FilterHabits","jsxDEV","_jsxDEV","Dashboard","_s","console","log","user","setUser","loading","setLoading","error","setError","hasWelcomed","setHasWelcomed","habits","setHabits","filteredHabits","setFilteredHabits","isFiltered","setIsFiltered","fetchUserData","_response$data","response","get","data","username","alert","fetchHabits","handleFilter","filteredResults","clearFilters","handleHabitCompletion","habitId","put","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","points","onClick","className","refreshHabits","onHabitCompletion","_c","$RefreshReg$"],"sources":["D:/MERN/RoutineQuest/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport API from '../api';\r\nimport HabitList from '../components/HabitList';\r\nimport CreateHabit from '../components/CreateHabit';\r\nimport FilterHabits from '../components/FilterHabits';\r\n\r\nconst Dashboard = () => {\r\n  console.log('Dashboard mounted!');\r\n\r\n  console.log('setting states');\r\n\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [hasWelcomed, setHasWelcomed] = useState(false);\r\n  const [habits, setHabits] = useState([]);\r\n  const [filteredHabits, setFilteredHabits] = useState([]);\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n\r\n  console.log('going to user block');\r\n  // Fetch user data\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await API.get('/users/getUser');\r\n      setUser(response.data);\r\n      setLoading(false);\r\n\r\n      if (!hasWelcomed && response.data?.username) {\r\n        alert(`Welcome, ${response.data.username}!`);\r\n        setHasWelcomed(true);\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to fetch user data');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  console.log('user block done');\r\n\r\n  console.log('going to habits block');\r\n  // Fetch all habits\r\n  const fetchHabits = async () => {\r\n    try {\r\n      const response = await API.get('/habits/getHabits');\r\n      setHabits(response.data);\r\n      setFilteredHabits([]);  // Clear filtered habits on refetch\r\n      setIsFiltered(false);   // Reset filter status on new fetch\r\n    } catch (error) {\r\n      console.error('Error fetching habits:', error);\r\n    }\r\n  };\r\n  console.log('habits block done')\r\n\r\n  console.log('gng to effects block');\r\n  // Refetch user data and habits when the component mounts\r\n  useEffect(() => {\r\n    // fetchUserData();\r\n    fetchHabits();\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  console.log('effect block done');\r\n\r\n  console.log('handle blocks')\r\n  // When filters are applied\r\n  const handleFilter = (filteredResults) => {\r\n    setFilteredHabits(filteredResults);\r\n    setIsFiltered(true);\r\n  };\r\n\r\n  // Clear filters\r\n  const clearFilters = () => {\r\n    setIsFiltered(false);\r\n    setFilteredHabits([]);\r\n  };\r\n\r\n  // Handle habit completion and points update\r\n  const handleHabitCompletion = async (habitId) => {\r\n    try {\r\n      // Update the habit completion status\r\n      await API.put(`/habits/updateHabits/${habitId}`, { completed: true });\r\n\r\n      // Refetch habits after completing one to get updated list\r\n      fetchHabits();\r\n      \r\n      // Optionally refetch user data if you want points or other data updated\r\n      fetchUserData();\r\n    } catch (error) {\r\n      console.error('Error updating habit:', error);\r\n    }\r\n  };\r\n\r\n  console.log('handle blocks done');\r\n  \r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      ) : (\r\n        <div>\r\n          <h1>Hello, {user.username}!</h1>\r\n          <p>Points: {user.points}</p> {/* Display user's updated points */}\r\n\r\n          {/* Filter Component */}\r\n          <FilterHabits setFilteredHabits={handleFilter} />\r\n\r\n          {isFiltered && (\r\n            <button \r\n              onClick={clearFilters} \r\n              className=\"bg-red-500 text-white px-4 py-2 mt-2 rounded\">\r\n              Clear Filters\r\n            </button>\r\n          )}\r\n\r\n          <h2 className=\"mt-4\">Your Habits</h2>\r\n\r\n          {/* Show filtered or all habits */}\r\n          <HabitList\r\n            habits={isFiltered ? filteredHabits : habits}\r\n            refreshHabits={fetchHabits}\r\n            onHabitCompletion={handleHabitCompletion} // Pass habit completion handler\r\n          />\r\n\r\n          {/* Habit creation */}\r\n          <CreateHabit refreshHabits={fetchHabits} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}