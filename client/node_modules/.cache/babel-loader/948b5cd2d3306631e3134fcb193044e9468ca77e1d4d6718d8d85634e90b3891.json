{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\RoutineQuest\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport API from '../api';\nimport HabitList from '../components/HabitList';\nimport CreateHabit from '../components/CreateHabit';\nimport FilterHabits from '../components/FilterHabits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [hasWelcomed, setHasWelcomed] = useState(false);\n  const [habits, setHabits] = useState([]); // Full habit list\n  const [filteredHabits, setFilteredHabits] = useState([]); // For filtered result\n  const [isFiltered, setIsFiltered] = useState(false); // Flag for filtered view\n\n  // Fetch user info\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        var _response$data;\n        const response = await API.get('/users/getUser');\n        setUser(response.data);\n        setLoading(false);\n        if (!hasWelcomed && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.username) {\n          alert(`Welcome, ${response.data.username}!`);\n          setHasWelcomed(true);\n        }\n      } catch (error) {\n        setError('Failed to fetch user data');\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [hasWelcomed]);\n\n  // Fetch all habits\n  const fetchHabits = async () => {\n    try {\n      const response = await API.get('/habits/getHabits');\n      setHabits(response.data);\n      setFilteredHabits([]); // Clear any previous filters\n      setIsFiltered(false);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n\n  // Load all habits on mount\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  // When filters are applied\n  const handleFilter = filteredResults => {\n    setFilteredHabits(filteredResults);\n    setIsFiltered(true);\n  };\n\n  // Clear filters\n  const clearFilters = () => {\n    setIsFiltered(false);\n    setFilteredHabits([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FilterHabits, {\n        setFilteredHabits: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), isFiltered && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearFilters,\n        className: \"bg-red-500 text-white px-4 py-2 mt-2 rounded\",\n        children: \"Clear Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-4\",\n        children: \"Your Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HabitList, {\n        habits: isFiltered ? filteredHabits : habits,\n        refreshHabits: fetchHabits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CreateHabit, {\n        refreshHabits: fetchHabits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Ytcf4nqJgsqnsBeECHKQNUmveVY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","API","HabitList","CreateHabit","FilterHabits","jsxDEV","_jsxDEV","Dashboard","_s","user","setUser","loading","setLoading","error","setError","hasWelcomed","setHasWelcomed","habits","setHabits","filteredHabits","setFilteredHabits","isFiltered","setIsFiltered","fetchUserData","_response$data","response","get","data","username","alert","fetchHabits","console","handleFilter","filteredResults","clearFilters","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","className","refreshHabits","_c","$RefreshReg$"],"sources":["D:/MERN/RoutineQuest/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport API from '../api';\r\nimport HabitList from '../components/HabitList';\r\nimport CreateHabit from '../components/CreateHabit';\r\nimport FilterHabits from '../components/FilterHabits'; \r\n\r\nconst Dashboard = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [hasWelcomed, setHasWelcomed] = useState(false);\r\n  const [habits, setHabits] = useState([]); // Full habit list\r\n  const [filteredHabits, setFilteredHabits] = useState([]); // For filtered result\r\n  const [isFiltered, setIsFiltered] = useState(false); // Flag for filtered view\r\n\r\n  // Fetch user info\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await API.get('/users/getUser');\r\n        setUser(response.data);\r\n        setLoading(false);\r\n\r\n        if (!hasWelcomed && response.data?.username) {\r\n          alert(`Welcome, ${response.data.username}!`);\r\n          setHasWelcomed(true);\r\n        }\r\n      } catch (error) {\r\n        setError('Failed to fetch user data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [hasWelcomed]);\r\n\r\n  // Fetch all habits\r\n  const fetchHabits = async () => {\r\n    try {\r\n      const response = await API.get('/habits/getHabits');\r\n      setHabits(response.data);\r\n      setFilteredHabits([]); // Clear any previous filters\r\n      setIsFiltered(false);\r\n    } catch (error) {\r\n      console.error('Error fetching habits:', error);\r\n    }\r\n  };\r\n\r\n  // Load all habits on mount\r\n  useEffect(() => {\r\n    fetchHabits();\r\n  }, []);\r\n\r\n  // When filters are applied\r\n  const handleFilter = (filteredResults) => {\r\n    setFilteredHabits(filteredResults);\r\n    setIsFiltered(true);\r\n  };\r\n\r\n  // Clear filters\r\n  const clearFilters = () => {\r\n    setIsFiltered(false);\r\n    setFilteredHabits([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      ) : (\r\n        <div>\r\n          <h1>Hello, {user.username}!</h1>\r\n\r\n          {/* Filter Component */}\r\n          <FilterHabits setFilteredHabits={handleFilter} />\r\n          {isFiltered && (\r\n            <button onClick={clearFilters} className=\"bg-red-500 text-white px-4 py-2 mt-2 rounded\">\r\n              Clear Filters\r\n            </button>\r\n          )}\r\n\r\n          <h2 className=\"mt-4\">Your Habits</h2>\r\n\r\n          {/* Show filtered or all habits */}\r\n          <HabitList\r\n            habits={isFiltered ? filteredHabits : habits}\r\n            refreshHabits={fetchHabits}\r\n          />\r\n\r\n          {/* Habit creation */}\r\n          <CreateHabit refreshHabits={fetchHabits} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}