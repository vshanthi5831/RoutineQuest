{"ast":null,"code":"import React,{useState,useEffect}from'react';import API from'../api';import HabitList from'../components/HabitList';import CreateHabit from'../components/CreateHabit';import FilterHabits from'../components/FilterHabits';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{console.log('Dashboard mounted!');const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[hasWelcomed,setHasWelcomed]=useState(false);const[habits,setHabits]=useState([]);const[filteredHabits,setFilteredHabits]=useState([]);const[isFiltered,setIsFiltered]=useState(false);// Fetch user data\nconst fetchUserData=async()=>{console.log('Fetching user data...');try{const response=await API.get('/users/getUser');if(response.data){var _response$data;console.log('User data fetched:',response.data);setUser(response.data);if(!hasWelcomed&&(_response$data=response.data)!==null&&_response$data!==void 0&&_response$data.username){alert(`Welcome, ${response.data.username}!`);setHasWelcomed(true);}}setLoading(false);}catch(error){console.log('Error fetching user data:',error);setError('Failed to fetch user data');setLoading(false);}};// Fetch all habits\nconst fetchHabits=async()=>{console.log('Fetching habits...');try{const response=await API.get('/habits/getHabits');if(response.data){console.log('Habits fetched:',response.data);setHabits(response.data);setFilteredHabits([]);// Clear filtered habits on refetch\nsetIsFiltered(false);// Reset filter status on new fetch\n}}catch(error){console.error('Error fetching habits:',error);}};// Refetch user data and habits when the component mounts\nuseEffect(()=>{console.log('useEffect triggered');const fetchData=async()=>{await fetchUserData();await fetchHabits();};fetchData();},[]);// Empty dependency array ensures this runs only once on mount\n// When filters are applied\nconst handleFilter=filteredResults=>{console.log('Applying filter...');setFilteredHabits(filteredResults);setIsFiltered(true);};// Clear filters\nconst clearFilters=()=>{console.log('Clearing filters...');setIsFiltered(false);setFilteredHabits([]);};// Handle habit completion and points update\nconst handleHabitCompletion=async habitId=>{console.log('Updating habit completion...',habitId);try{// Update the habit completion status\nawait API.put(`/habits/updateHabits/${habitId}`,{completed:true});// Refetch habits after completing one to get updated list\nfetchHabits();// Optionally refetch user data if you want points or other data updated\nfetchUserData();}catch(error){console.error('Error updating habit:',error);}};return/*#__PURE__*/_jsx(\"div\",{children:loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):error?/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Hello, \",user.username,\"!\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Points: \",user.points]}),\" \",/*#__PURE__*/_jsx(FilterHabits,{setFilteredHabits:handleFilter}),isFiltered&&/*#__PURE__*/_jsx(\"button\",{onClick:clearFilters,className:\"bg-red-500 text-white px-4 py-2 mt-2 rounded\",children:\"Clear Filters\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"mt-4\",children:\"Your Habits\"}),/*#__PURE__*/_jsx(HabitList,{habits:isFiltered?filteredHabits:habits,refreshHabits:fetchHabits,onHabitCompletion:handleHabitCompletion// Pass habit completion handler\n}),/*#__PURE__*/_jsx(CreateHabit,{refreshHabits:fetchHabits})]})});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","API","HabitList","CreateHabit","FilterHabits","jsx","_jsx","jsxs","_jsxs","Dashboard","console","log","user","setUser","loading","setLoading","error","setError","hasWelcomed","setHasWelcomed","habits","setHabits","filteredHabits","setFilteredHabits","isFiltered","setIsFiltered","fetchUserData","response","get","data","_response$data","username","alert","fetchHabits","fetchData","handleFilter","filteredResults","clearFilters","handleHabitCompletion","habitId","put","completed","children","style","color","points","onClick","className","refreshHabits","onHabitCompletion"],"sources":["D:/MERN/RoutineQuest/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport API from '../api';\r\nimport HabitList from '../components/HabitList';\r\nimport CreateHabit from '../components/CreateHabit';\r\nimport FilterHabits from '../components/FilterHabits';\r\n\r\nconst Dashboard = () => {\r\n  console.log('Dashboard mounted!');\r\n\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [hasWelcomed, setHasWelcomed] = useState(false);\r\n  const [habits, setHabits] = useState([]);\r\n  const [filteredHabits, setFilteredHabits] = useState([]);\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n\r\n  // Fetch user data\r\n  const fetchUserData = async () => {\r\n    console.log('Fetching user data...');\r\n    try {\r\n      const response = await API.get('/users/getUser');\r\n      if (response.data) {\r\n        console.log('User data fetched:', response.data);\r\n        setUser(response.data);\r\n        if (!hasWelcomed && response.data?.username) {\r\n          alert(`Welcome, ${response.data.username}!`);\r\n          setHasWelcomed(true);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log('Error fetching user data:', error);\r\n      setError('Failed to fetch user data');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch all habits\r\n  const fetchHabits = async () => {\r\n    console.log('Fetching habits...');\r\n    try {\r\n      const response = await API.get('/habits/getHabits');\r\n      if (response.data) {\r\n        console.log('Habits fetched:', response.data);\r\n        setHabits(response.data);\r\n        setFilteredHabits([]); // Clear filtered habits on refetch\r\n        setIsFiltered(false);   // Reset filter status on new fetch\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching habits:', error);\r\n    }\r\n  };\r\n\r\n  // Refetch user data and habits when the component mounts\r\n  useEffect(() => {\r\n    console.log('useEffect triggered');\r\n    const fetchData = async () => {\r\n      await fetchUserData();\r\n      await fetchHabits();\r\n    };\r\n    fetchData();\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // When filters are applied\r\n  const handleFilter = (filteredResults) => {\r\n    console.log('Applying filter...');\r\n    setFilteredHabits(filteredResults);\r\n    setIsFiltered(true);\r\n  };\r\n\r\n  // Clear filters\r\n  const clearFilters = () => {\r\n    console.log('Clearing filters...');\r\n    setIsFiltered(false);\r\n    setFilteredHabits([]);\r\n  };\r\n\r\n  // Handle habit completion and points update\r\n  const handleHabitCompletion = async (habitId) => {\r\n    console.log('Updating habit completion...', habitId);\r\n    try {\r\n      // Update the habit completion status\r\n      await API.put(`/habits/updateHabits/${habitId}`, { completed: true });\r\n\r\n      // Refetch habits after completing one to get updated list\r\n      fetchHabits();\r\n      \r\n      // Optionally refetch user data if you want points or other data updated\r\n      fetchUserData();\r\n    } catch (error) {\r\n      console.error('Error updating habit:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      ) : (\r\n        <div>\r\n          <h1>Hello, {user.username}!</h1>\r\n          <p>Points: {user.points}</p> {/* Display user's updated points */}\r\n\r\n          {/* Filter Component */}\r\n          <FilterHabits setFilteredHabits={handleFilter} />\r\n\r\n          {isFiltered && (\r\n            <button \r\n              onClick={clearFilters} \r\n              className=\"bg-red-500 text-white px-4 py-2 mt-2 rounded\">\r\n              Clear Filters\r\n            </button>\r\n          )}\r\n\r\n          <h2 className=\"mt-4\">Your Habits</h2>\r\n\r\n          {/* Show filtered or all habits */}\r\n          <HabitList\r\n            habits={isFiltered ? filteredHabits : habits}\r\n            refreshHabits={fetchHabits}\r\n            onHabitCompletion={handleHabitCompletion} // Pass habit completion handler\r\n          />\r\n\r\n          {/* Habit creation */}\r\n          <CreateHabit refreshHabits={fetchHabits} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}