{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\RoutineQuest\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport API from '../api';\nimport CreateHabit from '../components/CreateHabit';\nimport HabitList from '../components/HabitList';\nimport FilterHabits from '../components/FilterHabits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n\n  // Fetch all habits on mount\n  const fetchHabits = async () => {\n    try {\n      const res = await API.get('/habits/getHabits');\n      setHabits(res.data);\n    } catch (err) {\n      console.error('Error fetching habits:', err);\n    }\n  };\n\n  // Run only once when component mounts\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  // Handle filter\n  const handleFilter = async filters => {\n    try {\n      const query = new URLSearchParams(filters).toString();\n      const res = await API.get(`/habits/filterHabits?${query}`);\n      setHabits(res.data);\n    } catch (err) {\n      console.error('Error applying filters:', err);\n      setHabits([]); // Optional\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateHabit, {\n      refreshHabits: fetchHabits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterHabits, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HabitList, {\n      habits: habits,\n      refreshHabits: fetchHabits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"gIacv8FFx8NWfH/T9k0vnBCdA0k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","API","CreateHabit","HabitList","FilterHabits","jsxDEV","_jsxDEV","Dashboard","_s","habits","setHabits","fetchHabits","res","get","data","err","console","error","handleFilter","filters","query","URLSearchParams","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","refreshHabits","onFilter","_c","$RefreshReg$"],"sources":["D:/MERN/RoutineQuest/client/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport API from '../api';\r\nimport CreateHabit from '../components/CreateHabit';\r\nimport HabitList from '../components/HabitList';\r\nimport FilterHabits from '../components/FilterHabits';\r\n\r\nconst Dashboard = () => {\r\n  const [habits, setHabits] = useState([]);\r\n\r\n  // Fetch all habits on mount\r\n  const fetchHabits = async () => {\r\n    try {\r\n      const res = await API.get('/habits/getHabits');\r\n      setHabits(res.data);\r\n    } catch (err) {\r\n      console.error('Error fetching habits:', err);\r\n    }\r\n  };\r\n\r\n  // Run only once when component mounts\r\n  useEffect(() => {\r\n    fetchHabits();\r\n  }, []);\r\n\r\n  // Handle filter\r\n  const handleFilter = async (filters) => {\r\n    try {\r\n      const query = new URLSearchParams(filters).toString();\r\n      const res = await API.get(`/habits/filterHabits?${query}`);\r\n      setHabits(res.data);\r\n    } catch (err) {\r\n      console.error('Error applying filters:', err);\r\n      setHabits([]); // Optional\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <CreateHabit refreshHabits={fetchHabits} />\r\n      <FilterHabits onFilter={handleFilter} />\r\n      <HabitList habits={habits} refreshHabits={fetchHabits} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,mBAAmB,CAAC;MAC9CH,SAAS,CAACE,GAAG,CAACE,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACdW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,YAAY,GAAG,MAAOC,OAAO,IAAK;IACtC,IAAI;MACF,MAAMC,KAAK,GAAG,IAAIC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC;MACrD,MAAMV,GAAG,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,wBAAwBO,KAAK,EAAE,CAAC;MAC1DV,SAAS,CAACE,GAAG,CAACE,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC7CL,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrB,OAAA,CAACJ,WAAW;MAAC0B,aAAa,EAAEjB;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CrB,OAAA,CAACF,YAAY;MAACyB,QAAQ,EAAEX;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxCrB,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEA,MAAO;MAACmB,aAAa,EAAEjB;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}