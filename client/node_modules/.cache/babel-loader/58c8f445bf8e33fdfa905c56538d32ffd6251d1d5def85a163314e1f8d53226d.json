{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\RoutineQuest\\\\client\\\\src\\\\components\\\\HabitList.js\",\n  _s = $RefreshSig$();\n// src/components/HabitList.js\nimport React, { useState, useEffect } from 'react';\nimport API from '../api';\nimport HabitItem from './HabitItem'; // Importing HabitItem to display individual habit\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitList = ({\n  refreshHabits\n}) => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchHabits = async () => {\n      const token = localStorage.getItem('token'); // Get the token from localStorage\n      if (!token) {\n        console.log('No token found');\n        return; // If no token is found, return early\n      }\n      try {\n        // Send the token in the Authorization header\n        const response = await API.get('/api/habits/getHabits', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setHabits(response.data);\n      } catch (error) {\n        console.error('Error fetching habits:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHabits();\n  }, []); // Empty dependency array ensures this runs once when the component mounts\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading habits...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: habits.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No habits found. Start adding some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : habits.map(habit => /*#__PURE__*/_jsxDEV(HabitItem, {\n      habit: habit,\n      onUpdate: refreshHabits // Pass the refresh function from the parent component\n      ,\n      onDelete: refreshHabits // Pass the refresh function from the parent component\n    }, habit._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitList, \"Y/JMQ0DjrNuPSIGQpEwpKF2qYaw=\");\n_c = HabitList;\nexport default HabitList;\nvar _c;\n$RefreshReg$(_c, \"HabitList\");","map":{"version":3,"names":["React","useState","useEffect","API","HabitItem","jsxDEV","_jsxDEV","HabitList","refreshHabits","_s","habits","setHabits","loading","setLoading","fetchHabits","token","localStorage","getItem","console","log","response","get","headers","Authorization","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","habit","onUpdate","onDelete","_id","_c","$RefreshReg$"],"sources":["D:/MERN/RoutineQuest/client/src/components/HabitList.js"],"sourcesContent":["// src/components/HabitList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport API from '../api'; \r\nimport HabitItem from './HabitItem';  // Importing HabitItem to display individual habit\r\n\r\nconst HabitList = ({ refreshHabits }) => {\r\n  const [habits, setHabits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchHabits = async () => {\r\n      const token = localStorage.getItem('token'); // Get the token from localStorage\r\n      if (!token) {\r\n        console.log('No token found');\r\n        return; // If no token is found, return early\r\n      }\r\n\r\n      try {\r\n        // Send the token in the Authorization header\r\n        const response = await API.get('/api/habits/getHabits', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        setHabits(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching habits:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchHabits();\r\n  }, []);  // Empty dependency array ensures this runs once when the component mounts\r\n\r\n  if (loading) {\r\n    return <p>Loading habits...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {habits.length === 0 ? (\r\n        <p>No habits found. Start adding some!</p>\r\n      ) : (\r\n        habits.map((habit) => (\r\n          <HabitItem \r\n            key={habit._id} \r\n            habit={habit} \r\n            onUpdate={refreshHabits}  // Pass the refresh function from the parent component\r\n            onDelete={refreshHabits}  // Pass the refresh function from the parent component\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HabitList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,IAAI,CAACF,KAAK,EAAE;QACVG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,CAAC;MACV;MAEA,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,GAAG,CAAC,uBAAuB,EAAE;UACtDC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUR,KAAK;UAAG;QAC9C,CAAC,CAAC;QAEFJ,SAAS,CAACS,QAAQ,CAACI,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,IAAIF,OAAO,EAAE;IACX,oBAAON,OAAA;MAAAoB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC;EAEA,oBACExB,OAAA;IAAAoB,QAAA,EACGhB,MAAM,CAACqB,MAAM,KAAK,CAAC,gBAClBzB,OAAA;MAAAoB,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAE1CpB,MAAM,CAACsB,GAAG,CAAEC,KAAK,iBACf3B,OAAA,CAACF,SAAS;MAER6B,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAE1B,aAAc,CAAE;MAAA;MAC1B2B,QAAQ,EAAE3B,aAAc,CAAE;IAAA,GAHrByB,KAAK,CAACG,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CACF;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAjDIF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}