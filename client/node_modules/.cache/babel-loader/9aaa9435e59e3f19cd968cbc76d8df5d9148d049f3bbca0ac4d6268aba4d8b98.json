{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\RoutineQuest\\\\client\\\\src\\\\components\\\\FilterHabits.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FilterHabits from './FilterHabits';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitDashboard = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [filters, setFilters] = useState({});\n  const fetchFilteredHabits = async filterParams => {\n    try {\n      const query = new URLSearchParams(filterParams).toString(); // turn filters into query string\n      const res = await axios.get(`/api/habits/filter?${query}`); // your endpoint\n      setHabits(res.data);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching filtered habits:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setHabits([]); // Optional: show empty if not found\n    }\n  };\n  const handleFilter = filters => {\n    setFilters(filters);\n    fetchFilteredHabits(filters); // Call when filters are applied\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterHabits, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: habits.length > 0 ? habits.map(habit => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border rounded mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold\",\n          children: habit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: habit.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", habit.completed ? 'Done' : 'Pending']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Frequency: \", habit.frequency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, habit._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No habits found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitDashboard, \"1p4v8a8Qj6n5mSXf67g6PpoXyUA=\");\n_c = HabitDashboard;\nexport default HabitDashboard;\nvar _c;\n$RefreshReg$(_c, \"HabitDashboard\");","map":{"version":3,"names":["React","useState","useEffect","FilterHabits","axios","jsxDEV","_jsxDEV","HabitDashboard","_s","habits","setHabits","filters","setFilters","fetchFilteredHabits","filterParams","query","URLSearchParams","toString","res","get","data","error","_error$response","console","response","message","handleFilter","children","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","habit","name","description","completed","frequency","_id","_c","$RefreshReg$"],"sources":["D:/MERN/RoutineQuest/client/src/components/FilterHabits.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FilterHabits from './FilterHabits';\r\nimport axios from 'axios';\r\n\r\nconst HabitDashboard = () => {\r\n  const [habits, setHabits] = useState([]);\r\n  const [filters, setFilters] = useState({});\r\n\r\n  const fetchFilteredHabits = async (filterParams) => {\r\n    try {\r\n      const query = new URLSearchParams(filterParams).toString(); // turn filters into query string\r\n      const res = await axios.get(`/api/habits/filter?${query}`); // your endpoint\r\n      setHabits(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching filtered habits:', error.response?.data || error.message);\r\n      setHabits([]); // Optional: show empty if not found\r\n    }\r\n  };\r\n\r\n  const handleFilter = (filters) => {\r\n    setFilters(filters);\r\n    fetchFilteredHabits(filters); // Call when filters are applied\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FilterHabits onFilter={handleFilter} />\r\n      <div className=\"mt-6\">\r\n        {habits.length > 0 ? (\r\n          habits.map((habit) => (\r\n            <div key={habit._id} className=\"p-4 border rounded mb-2\">\r\n              <h3 className=\"font-bold\">{habit.name}</h3>\r\n              <p>{habit.description}</p>\r\n              <p>Status: {habit.completed ? 'Done' : 'Pending'}</p>\r\n              <p>Frequency: {habit.frequency}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"text-gray-500\">No habits found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HabitDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}