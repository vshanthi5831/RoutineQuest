{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\RoutineQuest\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport API from '../api'; // Importing API for requests\nimport HabitList from '../components/HabitList'; // Importing the HabitList component\nimport CreateHabit from '../components/CreateHabit'; // Import the CreateHabit component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [user, setUser] = useState(null); // For storing the user's information\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [hasWelcomed, setHasWelcomed] = useState(false); // To prevent multiple alerts\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        var _response$data;\n        const response = await API.get('/users/getUser');\n        setUser(response.data);\n        setLoading(false);\n\n        // Show welcome alert only once\n        if (!hasWelcomed && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.username) {\n          alert(`Welcome, ${response.data.username}!`);\n          setHasWelcomed(true);\n        }\n      } catch (error) {\n        setError('Failed to fetch user data');\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [hasWelcomed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HabitList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(CreateHabit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"3zSCTYpmO/AeAyRLb+RLZNtx0s0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","API","HabitList","CreateHabit","jsxDEV","_jsxDEV","Dashboard","_s","user","setUser","loading","setLoading","error","setError","hasWelcomed","setHasWelcomed","fetchUserData","_response$data","response","get","data","username","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["D:/MERN/RoutineQuest/client/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport API from '../api'; // Importing API for requests\r\nimport HabitList from '../components/HabitList'; // Importing the HabitList component\r\nimport CreateHabit from '../components/CreateHabit';  // Import the CreateHabit component\r\n\r\nconst Dashboard = () => {\r\n  const [user, setUser] = useState(null); // For storing the user's information\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [hasWelcomed, setHasWelcomed] = useState(false); // To prevent multiple alerts\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await API.get('/users/getUser');\r\n        setUser(response.data);\r\n        setLoading(false);\r\n\r\n        // Show welcome alert only once\r\n        if (!hasWelcomed && response.data?.username) {\r\n          alert(`Welcome, ${response.data.username}!`);\r\n          setHasWelcomed(true);\r\n        }\r\n\r\n      } catch (error) {\r\n        setError('Failed to fetch user data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [hasWelcomed]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      ) : (\r\n        <div>\r\n          <h1>Hello, {user.username}!</h1>  {/* Display user's name */}\r\n          <h2>Your Habits</h2>\r\n          <HabitList />  {/* Habit list component that will display habits */}\r\n          <CreateHabit />  {/* Button for creating a new habit */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ,CAAC,CAAC;AAC1B,OAAOC,SAAS,MAAM,yBAAyB,CAAC,CAAC;AACjD,OAAOC,WAAW,MAAM,2BAA2B,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QAAA,IAAAC,cAAA;QACF,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,GAAG,CAAC,gBAAgB,CAAC;QAChDV,OAAO,CAACS,QAAQ,CAACE,IAAI,CAAC;QACtBT,UAAU,CAAC,KAAK,CAAC;;QAEjB;QACA,IAAI,CAACG,WAAW,KAAAG,cAAA,GAAIC,QAAQ,CAACE,IAAI,cAAAH,cAAA,eAAbA,cAAA,CAAeI,QAAQ,EAAE;UAC3CC,KAAK,CAAC,YAAYJ,QAAQ,CAACE,IAAI,CAACC,QAAQ,GAAG,CAAC;UAC5CN,cAAc,CAAC,IAAI,CAAC;QACtB;MAEF,CAAC,CAAC,OAAOH,KAAK,EAAE;QACdC,QAAQ,CAAC,2BAA2B,CAAC;QACrCF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,oBACET,OAAA;IAAAkB,QAAA,EACGb,OAAO,gBACNL,OAAA;MAAAkB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACff,KAAK,gBACPP,OAAA;MAAGuB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEvCtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,GAAI,SAAO,EAACf,IAAI,CAACa,QAAQ,EAAC,GAAC;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,MAAE,eAClCtB,OAAA;QAAAkB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBtB,OAAA,CAACH,SAAS;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,MAAE,eACftB,OAAA,CAACF,WAAW;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,MAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CA5CID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}