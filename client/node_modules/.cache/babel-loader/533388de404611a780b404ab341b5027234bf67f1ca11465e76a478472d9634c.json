{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\RoutineQuest\\\\client\\\\src\\\\components\\\\HabitList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport HabitItem from './HabitItem'; // Assuming you've created this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitList = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchHabits = async () => {\n      try {\n        const response = await API.get('/habits/getHabits'); // Adjust the endpoint if needed\n        setHabits(response.data);\n      } catch (error) {\n        console.error('Error fetching habits:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const token = localStorage.getItem('token');\n    if (!token) {\n      // If no token, redirect to login page (using React Router or similar)\n      window.location.href = '/login'; // or use history.push('/login') if using react-router\n    } else {\n      fetchHabits();\n    }\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading habits...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Habits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), habits.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No habits found. Start adding some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : habits.map(habit => /*#__PURE__*/_jsxDEV(HabitItem, {\n      habit: habit\n    }, habit._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitList, \"Y/JMQ0DjrNuPSIGQpEwpKF2qYaw=\");\n_c = HabitList;\nexport default HabitList;\nvar _c;\n$RefreshReg$(_c, \"HabitList\");","map":{"version":3,"names":["React","useEffect","useState","API","HabitItem","jsxDEV","_jsxDEV","HabitList","_s","habits","setHabits","loading","setLoading","fetchHabits","response","get","data","error","console","token","localStorage","getItem","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","habit","_id","_c","$RefreshReg$"],"sources":["D:/MERN/RoutineQuest/client/src/components/HabitList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../api'; \r\nimport HabitItem from './HabitItem';  // Assuming you've created this component\r\n\r\nconst HabitList = () => {\r\n  const [habits, setHabits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchHabits = async () => {\r\n      try {\r\n        const response = await API.get('/habits/getHabits'); // Adjust the endpoint if needed\r\n        setHabits(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching habits:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      // If no token, redirect to login page (using React Router or similar)\r\n      window.location.href = '/login';  // or use history.push('/login') if using react-router\r\n    } else {\r\n      fetchHabits();\r\n    }\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Loading habits...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Habits</h2>\r\n      {habits.length === 0 ? (\r\n        <p>No habits found. Start adding some!</p>\r\n      ) : (\r\n        habits.map((habit) => (\r\n          <HabitItem key={habit._id} habit={habit} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HabitList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACrDL,SAAS,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACV;MACAG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAE;IACpC,CAAC,MAAM;MACLX,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAmB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC;EAEA,oBACEvB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBpB,MAAM,CAACqB,MAAM,KAAK,CAAC,gBAClBxB,OAAA;MAAAmB,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAE1CpB,MAAM,CAACsB,GAAG,CAAEC,KAAK,iBACf1B,OAAA,CAACF,SAAS;MAAiB4B,KAAK,EAAEA;IAAM,GAAxBA,KAAK,CAACC,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC3C,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}