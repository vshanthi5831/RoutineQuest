{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\RoutineQuest\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport API from '../api'; // Importing API for requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Fetch user's habits\n  useEffect(() => {\n    const fetchHabits = async () => {\n      try {\n        const response = await API.get('/habits');\n        setHabits(response.data);\n        setLoading(false);\n      } catch (error) {\n        setError('Failed to fetch habits');\n        setLoading(false);\n      }\n    };\n    fetchHabits();\n  }, []);\n  const handleMarkComplete = async habitId => {\n    try {\n      await API.put(`/habits/${habitId}`, {\n        completed: true\n      });\n      setHabits(habits.map(habit => habit._id === habitId ? {\n        ...habit,\n        completed: true\n      } : habit));\n    } catch (error) {\n      setError('Failed to update habit');\n    }\n  };\n  const handleDeleteHabit = async habitId => {\n    try {\n      await API.delete(`/habits/${habitId}`);\n      setHabits(habits.filter(habit => habit._id !== habitId));\n    } catch (error) {\n      setError('Failed to delete habit');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: habits.map(habit => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: habit.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: habit.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Frequency: \", habit.frequency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", habit.completed ? 'Completed' : 'Pending']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMarkComplete(habit._id),\n            children: \"Mark as Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteHabit(habit._id),\n            children: \"Delete Habit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, habit._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"g5b4c6fAJj7+1chLJlTSNIrm9qA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","API","jsxDEV","_jsxDEV","Dashboard","_s","habits","setHabits","loading","setLoading","error","setError","fetchHabits","response","get","data","handleMarkComplete","habitId","put","completed","map","habit","_id","handleDeleteHabit","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","name","description","frequency","onClick","_c","$RefreshReg$"],"sources":["D:/MERN/RoutineQuest/client/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport API from '../api'; // Importing API for requests\r\n\r\nconst Dashboard = () => {\r\n  const [habits, setHabits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch user's habits\r\n  useEffect(() => {\r\n    const fetchHabits = async () => {\r\n      try {\r\n        const response = await API.get('/habits');\r\n        setHabits(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError('Failed to fetch habits');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchHabits();\r\n  }, []);\r\n\r\n  const handleMarkComplete = async (habitId) => {\r\n    try {\r\n      await API.put(`/habits/${habitId}`, { completed: true });\r\n      setHabits(habits.map(habit => \r\n        habit._id === habitId ? { ...habit, completed: true } : habit\r\n      ));\r\n    } catch (error) {\r\n      setError('Failed to update habit');\r\n    }\r\n  };\r\n\r\n  const handleDeleteHabit = async (habitId) => {\r\n    try {\r\n      await API.delete(`/habits/${habitId}`);\r\n      setHabits(habits.filter(habit => habit._id !== habitId));\r\n    } catch (error) {\r\n      setError('Failed to delete habit');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Your Dashboard</h1>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      ) : (\r\n        <div>\r\n          <ul>\r\n            {habits.map((habit) => (\r\n              <li key={habit._id}>\r\n                <h3>{habit.name}</h3>\r\n                <p>{habit.description}</p>\r\n                <p>Frequency: {habit.frequency}</p>\r\n                <p>Status: {habit.completed ? 'Completed' : 'Pending'}</p>\r\n                <button onClick={() => handleMarkComplete(habit._id)}>\r\n                  Mark as Completed\r\n                </button>\r\n                <button onClick={() => handleDeleteHabit(habit._id)}>\r\n                  Delete Habit\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}